{"ast":null,"code":"import _slicedToArray from\"C:/Users/Dipesh goel/Downloads/Random-Quote/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QuoteDisplay=function QuoteDisplay(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),quoteData=_useState2[0],setQuoteData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),randomQuote=_useState6[0],setRandomQuote=_useState6[1];// Initialize randomQuote as null\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),firstQuoteFetched=_useState8[0],setFirstQuoteFetched=_useState8[1];// Track whether the first quote is fetched\nuseEffect(function(){fetchRandomQuote();},[]);// Fetch the random quote when the component mounts\nvar fetchRandomQuote=function fetchRandomQuote(){setLoading(true);// Set loading to true when fetching data\n// Fetch data from the backend server\naxios.get('http://localhost:5050/quote').then(function(response){setQuoteData(response.data);setLoading(false);// Set loading to false when data is received\n}).catch(function(error){console.error('Error fetching quote:',error);setLoading(false);// Set loading to false even on error to handle the case where no quotes are available\n});};var getRandomQuote=function getRandomQuote(){if(quoteData.length===0)return null;var randomIndex=Math.floor(Math.random()*quoteData.length);return quoteData[randomIndex];};var handleGetRandomQuote=function handleGetRandomQuote(){if(firstQuoteFetched){// If the first quote is fetched, get another quote and update randomQuote\nsetRandomQuote(getRandomQuote());}else{// If the first quote is not fetched, fetch the first quote\nsetRandomQuote(getRandomQuote());setFirstQuoteFetched(true);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Random Quote\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):quoteData.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No quotes found.\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[randomQuote?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"Quote\",children:randomQuote.quote}),/*#__PURE__*/_jsxs(\"p\",{className:\"Author\",children:[\"- \",randomQuote.author]})]}):/*#__PURE__*/_jsxs(\"p\",{children:[\"Click the button to get a random quote.\",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"button\",{className:\"GetQuoteButton\",onClick:handleGetRandomQuote,children:firstQuoteFetched&&randomQuote?'Get Another Quote':'Get Quote'})]})]});};export default QuoteDisplay;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuoteDisplay","_useState","_useState2","_slicedToArray","quoteData","setQuoteData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","randomQuote","setRandomQuote","_useState7","_useState8","firstQuoteFetched","setFirstQuoteFetched","fetchRandomQuote","get","then","response","data","catch","error","console","getRandomQuote","length","randomIndex","Math","floor","random","handleGetRandomQuote","children","className","quote","author","onClick"],"sources":["C:/Users/Dipesh goel/Downloads/Random-Quote/Frontend/src/components/QuoteDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst QuoteDisplay = () => {\n  const [quoteData, setQuoteData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [randomQuote, setRandomQuote] = useState(null); // Initialize randomQuote as null\n  const [firstQuoteFetched, setFirstQuoteFetched] = useState(false); // Track whether the first quote is fetched\n\n  useEffect(() => {\n      fetchRandomQuote();\n    }, []); // Fetch the random quote when the component mounts\n\n  const fetchRandomQuote = () => {\n    setLoading(true); // Set loading to true when fetching data\n    // Fetch data from the backend server\n    axios\n      .get('http://localhost:5050/quote')\n      .then((response) => {\n        setQuoteData(response.data);\n        setLoading(false);  // Set loading to false when data is received\n      })\n      .catch((error) => {\n        console.error('Error fetching quote:', error);\n        setLoading(false); // Set loading to false even on error to handle the case where no quotes are available\n      });\n  };\n\n  const getRandomQuote = () => {\n      if (quoteData.length === 0) return null;\n      const randomIndex = Math.floor(Math.random() * quoteData.length);\n      return quoteData[randomIndex];\n  };\n\n  const handleGetRandomQuote = () => {\n    if (firstQuoteFetched) {\n      // If the first quote is fetched, get another quote and update randomQuote\n      setRandomQuote(getRandomQuote());\n    } else {\n      // If the first quote is not fetched, fetch the first quote\n      setRandomQuote(getRandomQuote());\n      setFirstQuoteFetched(true);\n    }\n  };\n\n\n  return (\n    <div>\n      <h3>Random Quote</h3>\n      {loading ? (\n        <p>Loading...</p>\n      ) : quoteData.length === 0 ? (\n        <p>No quotes found.</p>\n      ) : (\n        <>\n          {randomQuote ? (\n            <>\n              <h4 className='Quote'>{randomQuote.quote}</h4>\n              <p className='Author'>- {randomQuote.author}</p>\n            </>\n          ) : (\n            <p>Click the button to get a random quote.<br/></p>\n          )}\n          <button className=\"GetQuoteButton\" onClick={handleGetRandomQuote}>\n            {firstQuoteFetched  && randomQuote ? 'Get Another Quote' : 'Get Quote'}\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default QuoteDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}