{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dipesh goel\\\\OneDrive - iitkgp.ac.in\\\\Projects\\\\Random_Quote\\\\Frontend\\\\src\\\\components\\\\ThirdPartyQuoteDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ThirdPartyQuoteDisplay = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [randomQuote, setRandomQuote] = useState(null);\n  useEffect(() => {\n    fetchRandomQuote();\n  }, []);\n  const fetchRandomQuote = () => {\n    setLoading(true); // Set loading to true before fetching data\n    axios.get('https://api.quotable.io/random').then(response => {\n      setRandomQuote(response.data);\n      setLoading(false); // Set loading to false after data is received\n    }).catch(error => {\n      console.error('Error fetching quote:', error);\n      setLoading(false); // Set loading to false even on error to handle the case where no quotes are available\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Random Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : randomQuote ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"Quote\",\n        children: randomQuote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Author\",\n        children: [\"- \", randomQuote.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"GetQuoteButton\",\n        onClick: fetchRandomQuote,\n        children: \"Get Another Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quotes found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ThirdPartyQuoteDisplay, \"7B9aZx8DLknoQ2BnSh26+OV5rNE=\");\n_c = ThirdPartyQuoteDisplay;\nexport default ThirdPartyQuoteDisplay;\nvar _c;\n$RefreshReg$(_c, \"ThirdPartyQuoteDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ThirdPartyQuoteDisplay","_s","loading","setLoading","randomQuote","setRandomQuote","fetchRandomQuote","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","content","author","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dipesh goel/OneDrive - iitkgp.ac.in/Projects/Random_Quote/Frontend/src/components/ThirdPartyQuoteDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ThirdPartyQuoteDisplay = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [randomQuote, setRandomQuote] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchRandomQuote();\r\n  }, []);\r\n\r\n  const fetchRandomQuote = () => {\r\n    setLoading(true); // Set loading to true before fetching data\r\n    axios\r\n      .get('https://api.quotable.io/random')\r\n      .then((response) => {\r\n        setRandomQuote(response.data);\r\n        setLoading(false); // Set loading to false after data is received\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching quote:', error);\r\n        setLoading(false); // Set loading to false even on error to handle the case where no quotes are available\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Random Quote</h3>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : randomQuote ? (\r\n        <>\r\n          <h4 className='Quote'>{randomQuote.content}</h4>\r\n          <p className='Author'>- {randomQuote.author}</p>\r\n          <button className=\"GetQuoteButton\" onClick={fetchRandomQuote}>\r\n            Get Another Quote\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <p>No quotes found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThirdPartyQuoteDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdY,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBR,KAAK,CACFY,GAAG,CAAC,gCAAgC,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAK;MAClBJ,cAAc,CAACI,QAAQ,CAACC,IAAI,CAAC;MAC7BP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;;EAED,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBhB,OAAO,gBACNL,OAAA;MAAAiB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACfd,WAAW,gBACbP,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAIsB,SAAS,EAAC,OAAO;QAAAL,QAAA,EAAEV,WAAW,CAACgB;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChDrB,OAAA;QAAGsB,SAAS,EAAC,QAAQ;QAAAL,QAAA,GAAC,IAAE,EAACV,WAAW,CAACiB,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDrB,OAAA;QAAQsB,SAAS,EAAC,gBAAgB;QAACG,OAAO,EAAEhB,gBAAiB;QAAAQ,QAAA,EAAC;MAE9D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC,gBAEHrB,OAAA;MAAAiB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxCID,sBAAsB;AAAAuB,EAAA,GAAtBvB,sBAAsB;AA0C5B,eAAeA,sBAAsB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}