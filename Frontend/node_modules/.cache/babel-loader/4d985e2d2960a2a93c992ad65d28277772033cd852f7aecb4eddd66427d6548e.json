{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dipesh goel\\\\OneDrive - iitkgp.ac.in\\\\Projects\\\\Random_Quote\\\\Frontend\\\\src\\\\components\\\\ThirdPartyQuoteDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ThirdPartyQuoteDisplay = () => {\n  _s();\n  const [randomQuote, setRandomQuote] = useState({}); // Initialize randomQuote as an empty object\n\n  const fetchRandomQuote = () => {\n    axios.get('https://api.quotable.io/random').then(response => {\n      setRandomQuote(response.data);\n    }).catch(error => {\n      console.error('Error fetching quote:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Random Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"from Random Quotes API\"\n    }, void 0, false), randomQuote.content ?\n    /*#__PURE__*/\n    // Check if content exists to determine if the quote is fetched\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"Quote\",\n        children: randomQuote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Author\",\n        children: [\"- \", randomQuote.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"GetQuoteButton\",\n        onClick: fetchRandomQuote,\n        children: \"Get Another Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button to get a random quote.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"GetQuoteButton\",\n        onClick: fetchRandomQuote,\n        children: \"Get Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ThirdPartyQuoteDisplay, \"qTNXyos8s1AbdaFO3KE7ZPVUd3o=\");\n_c = ThirdPartyQuoteDisplay;\nexport default ThirdPartyQuoteDisplay;\nvar _c;\n$RefreshReg$(_c, \"ThirdPartyQuoteDisplay\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ThirdPartyQuoteDisplay","_s","randomQuote","setRandomQuote","fetchRandomQuote","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","content","className","author","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dipesh goel/OneDrive - iitkgp.ac.in/Projects/Random_Quote/Frontend/src/components/ThirdPartyQuoteDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ThirdPartyQuoteDisplay = () => {\r\n  const [randomQuote, setRandomQuote] = useState({}); // Initialize randomQuote as an empty object\r\n\r\n  const fetchRandomQuote = () => {\r\n    axios\r\n      .get('https://api.quotable.io/random')\r\n      .then((response) => {\r\n        setRandomQuote(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching quote:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Random Quote</h3> <>from Random Quotes API</>\r\n      {randomQuote.content ? ( // Check if content exists to determine if the quote is fetched\r\n        <>\r\n          <h4 className='Quote'>{randomQuote.content}</h4>\r\n          <p className='Author'>- {randomQuote.author}</p>\r\n          <button className=\"GetQuoteButton\" onClick={fetchRandomQuote}>\r\n            Get Another Quote\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p>Click the button to get a random quote.</p>\r\n          <button className=\"GetQuoteButton\" onClick={fetchRandomQuote}>\r\n            Get Quote\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThirdPartyQuoteDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEpD,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC7BT,KAAK,CACFU,GAAG,CAAC,gCAAgC,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAK;MAClBJ,cAAc,CAACI,QAAQ,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAED,oBACEb,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eAAAnB,OAAA,CAAAE,SAAA;MAAAa,QAAA,EAAE;IAAsB,gBAAE,CAAC,EAChDV,WAAW,CAACe,OAAO;IAAA;IAAK;IACvBpB,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA;QAAIqB,SAAS,EAAC,OAAO;QAAAN,QAAA,EAAEV,WAAW,CAACe;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChDnB,OAAA;QAAGqB,SAAS,EAAC,QAAQ;QAAAN,QAAA,GAAC,IAAE,EAACV,WAAW,CAACiB,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDnB,OAAA;QAAQqB,SAAS,EAAC,gBAAgB;QAACE,OAAO,EAAEhB,gBAAiB;QAAAQ,QAAA,EAAC;MAE9D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC,gBAEHnB,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAG;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9CnB,OAAA;QAAQqB,SAAS,EAAC,gBAAgB;QAACE,OAAO,EAAEhB,gBAAiB;QAAAQ,QAAA,EAAC;MAE9D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCID,sBAAsB;AAAAqB,EAAA,GAAtBrB,sBAAsB;AAqC5B,eAAeA,sBAAsB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}